<?php
namespace Oryzone\MediaStorage\Test\Cdn;

use Oryzone\MediaStorage\Cdn\LocalCdn,
    Oryzone\MediaStorage\Variant\Variant,
    Oryzone\MediaStorage\Model\SimpleMedia;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-06 at 06:32:28.
 */
class LocalCdnTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var LocalCdn
     */
    protected $cdn;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->cdn = new LocalCdn();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Oryzone\MediaStorage\Cdn\LocalCdn::setConfiguration
     */
    public function testSetConfiguration()
    {
        $this->cdn->setConfiguration(array('path' => 'test'));
    }

    /**
     * @expectedException \Oryzone\MediaStorage\Exception\InvalidArgumentException
     * @covers Oryzone\MediaStorage\Cdn\LocalCdn::setConfiguration
     */
    public function testSetConfigurationException()
    {
        $this->cdn->setConfiguration(array('foo' => 'bar'));
    }

    /**
     * @covers Oryzone\MediaStorage\Cdn\LocalCdn::getUrl
     */
    public function testGetUrl()
    {
        $_SERVER['HTTP_HOST'] = 'localhost';

        $media = new SimpleMedia();
        $variant = new Variant('test');
        $variant->setFilename('file.jpg');
        $this->cdn->setConfiguration(array('path' => 'path/'));
        $this->assertEquals('path/file.jpg', $this->cdn->getUrl($media, $variant));
        $options = array(
            'absolute' => TRUE,
        );
        $this->assertEquals('http://localhost/path/file.jpg', $this->cdn->getUrl($media, $variant, $options));
        $options['domain'] = 'example.com';
        $this->assertEquals('http://example.com/path/file.jpg', $this->cdn->getUrl($media, $variant, $options));
        $options['protocol'] = 'https';
        $this->assertEquals('https://example.com/path/file.jpg', $this->cdn->getUrl($media, $variant, $options));
    }
}
