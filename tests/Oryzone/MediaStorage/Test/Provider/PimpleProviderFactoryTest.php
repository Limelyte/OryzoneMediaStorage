<?php
namespace Oryzone\MediaStorage\Test\Provider;

/*
 * This file is part of the Oryzone/MediaStorage package.
 *
 * (c) Luciano Mammino <lmammino@oryzone.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use Oryzone\MediaStorage\Provider\PimpleProviderFactory;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-07 at 07:48:13.
 */
class PimpleProviderFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PimpleProviderFactory
     */
    protected $factory;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $container = new \Pimple();
        $this->factory = new PimpleProviderFactory($container);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testAddDefinitionAndGet()
    {
        $provider = $this->getMock('\Oryzone\MediaStorage\Provider\ProviderInterface');
        $this->factory->addDefinition('default', function($c) use ($provider) {
            return $provider;
        });
        $this->assertSame($provider, $this->factory->get('default'));
    }

    /**
     * @expectedException \Oryzone\MediaStorage\Exception\InvalidArgumentException
     */
    public function testGetException0()
    {
        //service not set
        $this->factory->get('undefined');
    }

    /**
     * @expectedException \Oryzone\MediaStorage\Exception\InvalidConfigurationException
     */
    public function testGetException1()
    {
        //invalid class returned
        $this->factory->addDefinition('default', function($c){
            return 'invalid';
        });
        $this->factory->get('default');
    }
}
