<?php
namespace Oryzone\MediaStorage\Test\Variant;

/*
 * This file is part of the Oryzone/MediaStorage package.
 *
 * (c) Luciano Mammino <lmammino@oryzone.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use Oryzone\MediaStorage\Variant\Variant,
    Oryzone\MediaStorage\Variant\VariantNode;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-06 at 04:41:06.
 */
class VariantNodeTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Variant
     */
    protected $parentVariant;

    /**
     * @var Variant
     */
    protected $variant;

    /**
     * @var VariantNode
     */
    protected $parentNode;

    /**
     * @var VariantNode
     */
    protected $node;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->parentVariant = new Variant();
        $this->parentNode = new VariantNode($this->parentVariant);
        $this->variant = new Variant();
        $this->node = new VariantNode($this->variant, $this->parentNode);
        $this->parentNode->addChild($this->node);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testGetChildren()
    {
        $this->assertContains($this->node, $this->parentNode->getChildren());
    }

    public function testAddChild()
    {
        $newNode = new VariantNode(new Variant(), $this->parentNode);
        $this->assertNotContains($newNode, $this->parentNode->getChildren());
        $this->parentNode->addChild($newNode);
        $this->assertContains($newNode, $this->parentNode->getChildren());
    }

    public function testSetGetContent()
    {
        $this->assertEquals($this->variant, $this->node->getContent());
        $newVariant = new Variant();
        $this->node->setContent($newVariant);
        $this->assertEquals($newVariant, $this->node->getContent());
    }

    public function testSetGetParent()
    {
        $this->assertEquals($this->parentNode, $this->node->getParent());
        $newParent = new VariantNode(new Variant());
        $this->node->setParent($newParent);
        $this->assertEquals($newParent, $this->node->getParent());
    }
}
